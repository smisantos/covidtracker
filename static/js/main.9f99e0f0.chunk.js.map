{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/logo.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","Grid","container","spacing","justify","item","component","Card","xs","md","cx","styles","card","infected","CardContent","CardMedia","media","image","title","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toUTCString","url","fetchData","country","a","changeableURL","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountryList","countries","countryList","countryData","name","code","iso2","code2","iso3","Chart","useState","setDailyData","useEffect","fetchAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","text","lineChart","length","borderColor","fill","CountryPicker","handleCountryChange","setCountryData","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","theme","createMuiTheme","typography","fontFamily","join","App","state","dataByCountry","setState","fetchedData","this","ThemeProvider","src","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9f99e0f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__35XnN\",\"card\":\"Cards_card__SypnM\",\"infected\":\"Cards_infected__2fMXP\",\"recovered\":\"Cards_recovered__gYSZZ\",\"deaths\":\"Cards_deaths__1oH52\"};","import React from 'react'\r\nimport { Card, CardContent, Typography, Grid, CardMedia } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return(\"Loading...\")\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md= {3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <CardMedia className={styles.media} image=\"https://img.icons8.com/material-outlined/100/000000/being-sick.png\" title=\"\"/>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infectados</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{new Date(lastUpdate).toUTCString()}</Typography>\r\n                        <Typography variant=\"caption\">Numero de Casos Activos de COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md= {3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <CardMedia className={styles.media} image=\"https://img.icons8.com/ios/100/000000/recovery.png\" title=\"\"/>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recuperados</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{new Date(lastUpdate).toUTCString()}</Typography>\r\n                        <Typography variant=\"caption\">Numero de Casos Recuperados de COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md= {3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <CardMedia className={styles.media} image=\"https://img.icons8.com/dotty/80/000000/die-in-bed.png\" title=\"\"/>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Mortes</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{new Date(lastUpdate).toUTCString()}</Typography>\r\n                        <Typography variant=\"caption\">Numero de Ã“bitos de COVID19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableURL = url;\r\n\r\n    if (country) {\r\n        changeableURL = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableURL);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const fetchCountryList = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`)\r\n\r\n        const countryList = countries.map((countryData) => ({\r\n            name: countryData.name,\r\n            code: countryData.iso2,\r\n            code2: countryData.iso3\r\n        }))\r\n\r\n        return countryList;\r\n\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data, country}) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        };\r\n        \r\n        fetchAPI();\r\n        \r\n    }, []);\r\n\r\n    const barChart = (\r\n        data.confirmed\r\n        ? ( \r\n        <Bar data = {{\r\n                labels: ['Infectados','Recuperados','Ã“bitos'],\r\n                datasets: [{\r\n                    label: \"Casos\",\r\n                    backgroundColor: ['rgba(255, 0, 0, 1)','rgba(0, 255, 0, 1)','rgba(0, 0, 0, 1)'],\r\n                    data: [data.confirmed.value, data.recovered.value,data.deaths.value]\r\n                }]\r\n        }}\r\n        options={{\r\n            legend: {display: false},\r\n            title: { display: true, text:`Dados actuais para ${country}`}\r\n        }}\r\n\r\n        />   ) : null\r\n    );\r\n\r\n    const lineChart = (\r\n        dailyData.length \r\n            ? <Line data={{\r\n            labels: dailyData.map(({ date }) => date),\r\n            datasets:[{\r\n                data: dailyData.map( ({confirmed }) => confirmed),\r\n                label: 'Infectados',\r\n                borderColor: 'red',\r\n                fill: true\r\n            },{\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Ã“bitos',\r\n                borderColor: 'black',\r\n                backgroundColor: 'rgba(0,0,0,0.8',\r\n                fill: true\r\n            }],\r\n        }}\r\n        /> : null\r\n    );\r\n  \r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport { fetchCountryList } from '../../api'\r\n\r\nimport styles from './CountryPicker.module.css'\r\n\r\nconst CountryPicker = ( {handleCountryChange}) => {\r\n  const [countryData, setCountryData] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountryData(await fetchCountryList())\r\n    }\r\n\r\n    fetchAPI()\r\n  }, [])\r\n\r\n  return (\r\n    <FormControl className={styles.FormControl}>\r\n      <NativeSelect  defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">\r\n          Global\r\n        </option>\r\n        {countryData.map(({ name, i }) => \r\n          <option key={i} value={name}>\r\n            {name}\r\n          </option>\r\n        )}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Cards, Chart, CountryPicker } from './components';\r\n\r\nimport { fetchData } from './api';\r\n\r\nimport image from './images/logo.png';\r\n\r\nimport styles from './App.module.css';\r\n\r\n// Material UI\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n            'Varela Round',\r\n            'sans-serif'\r\n        ].join(','),\r\n    }\r\n});\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n\r\n        //fetch the data\r\n        const dataByCountry = await fetchData(country);\r\n        // set the data\r\n        this.setState({ data: dataByCountry, country: country });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { data, country } = this.state;\r\n        return (\r\n            <ThemeProvider theme={theme}>\r\n                <div className={styles.container}>\r\n                    <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n                    <Cards data={data} />\r\n                    <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                    <Chart data={data} country={country} />\r\n                </div>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Ig4u\",\"image\":\"App_image__1QXHI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1YVtU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__dN74U\"};","module.exports = __webpack_public_path__ + \"static/media/logo.6ae52789.png\";"],"sourceRoot":""}